version: '2'

services:
  redis:
    image: redis
    restart: always
    command: [redis-server, --appendonly, 'yes']
    volumes:
      - redis:/data

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
    logging:
      driver: none

  dockergen:
    image: poma/docker-gen
    container_name: dockergen
    restart: always
    command: -notify-sighup nginx -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    restart: always
    environment:
      NGINX_DOCKER_GEN_CONTAINER: dockergen
    volumes_from:
      - nginx
      - dockergen

  # ---------------------- BSC (Binance Smart Chain) ----------------------- #

  bsc-server:
    image: tornadocash/relayer:sidechain-beta
    profiles: ['bsc']
    restart: always
    command: server
    env_file: .env.bsc
    environment:
      NET_ID: 56
      REDIS_URL: redis://redis/1
      nginx_proxy_read_timeout: 600
    depends_on: [redis]

  bsc-healthWatcher:
    image: tornadocash/relayer:sidechain-beta
    profiles: ['bsc']
    restart: always
    command: healthWatcher
    env_file: .env.bsc
    environment:
      NET_ID: 56
      REDIS_URL: redis://redis/1
    depends_on: [redis, bsc-server]

  bsc-worker1:
    image: tornadocash/relayer:sidechain-beta
    profiles: ['bsc']
    restart: always
    command: worker
    env_file: .env.bsc
    environment:
      NET_ID: 56
      REDIS_URL: redis://redis/1
    depends_on: [redis, bsc-server]

  # -------------------------------------------------- #

  # ---------------------- Polygon (MATIC) --------------------- #

  polygon-server:
    image: tornadocash/relayer:sidechain-beta
    profiles: ['polygon']
    restart: always
    command: server
    env_file: .env.polygon
    environment:
      NET_ID: 137
      REDIS_URL: redis://redis/2
      nginx_proxy_read_timeout: 600
    depends_on: [redis]

  polygon-healthWatcher:
    image: tornadocash/relayer:sidechain-beta
    profiles: ['polygon']
    restart: always
    command: healthWatcher
    env_file: .env.polygon
    environment:
      NET_ID: 137
      REDIS_URL: redis://redis/2
    depends_on: [redis, polygon-server]

  polygon-worker1:
    image: tornadocash/relayer:sidechain-beta
    profiles: ['polygon']
    restart: always
    command: worker
    env_file: .env.polygon
    environment:
      NET_ID: 137
      REDIS_URL: redis://redis/2
    depends_on: [redis, polygon-server]

  # -------------------------------------------------- #

  # ---------------------- Gnosis (XDAI) ---------------------- #

  gnosis-server:
    image: tornadocash/relayer:sidechain-beta
    profiles: ['gnosis']
    restart: always
    command: server
    env_file: .env.gnosis
    environment:
      NET_ID: 100
      REDIS_URL: redis://redis/3
      nginx_proxy_read_timeout: 600
    depends_on: [redis]

  gnosis-healthWatcher:
    image: tornadocash/relayer:sidechain-beta
    profiles: ['gnosis']
    restart: always
    command: healthWatcher
    env_file: .env.gnosis
    environment:
      NET_ID: 100
      REDIS_URL: redis://redis/3
    depends_on: [redis, gnosis-server]

  gnosis-worker1:
    image: tornadocash/relayer:sidechain-beta
    profiles: ['gnosis']
    restart: always
    command: worker
    env_file: .env.gnosis
    environment:
      NET_ID: 100
      REDIS_URL: redis://redis/3
    depends_on: [redis, gnosis-server]

  # -------------------------------------------------- #

  # ---------------------- AVAX ---------------------- #

  avax-server:
    image: tornadocash/relayer:sidechain-beta
    profiles: ['avax']
    restart: always
    command: server
    env_file: .env.avax
    environment:
      NET_ID: 43114
      REDIS_URL: redis://redis/4
      nginx_proxy_read_timeout: 600
    depends_on: [redis]

  avax-healthWatcher:
    image: tornadocash/relayer:sidechain-beta
    profiles: ['avax']
    restart: always
    command: healthWatcher
    env_file: .env.avax
    environment:
      NET_ID: 43114
      REDIS_URL: redis://redis/4
    depends_on: [redis, avax-server]

  avax-worker1:
    image: tornadocash/relayer:sidechain-beta
    profiles: ['avax']
    restart: always
    command: worker
    env_file: .env.avax
    environment:
      NET_ID: 43114
      REDIS_URL: redis://redis/4
    depends_on: [redis, avax-server]

  # -------------------------------------------------- #

  # ---------------------- OP ------------------------ #

  op-server:
    image: tornadocash/relayer:sidechain-beta
    profiles: ['op']
    restart: always
    command: server
    env_file: .env.op
    environment:
      NET_ID: 10
      REDIS_URL: redis://redis/5
      nginx_proxy_read_timeout: 600
    depends_on: [redis]

  op-healthWatcher:
    image: tornadocash/relayer:sidechain-beta
    profiles: ['op']
    restart: always
    command: healthWatcher
    env_file: .env.op
    environment:
      NET_ID: 10
      REDIS_URL: redis://redis/5
    depends_on: [redis, op-server]

  op-worker1:
    image: tornadocash/relayer:sidechain-beta
    profiles: ['op']
    restart: always
    command: worker
    env_file: .env.op
    environment:
      NET_ID: 10
      REDIS_URL: redis://redis/5
    depends_on: [redis, op-server]

  # -------------------------------------------------- #

  # ---------------------- Arbitrum ----------------------- #

  arb-server:
    image: tornadocash/relayer:sidechain-beta
    profiles: ['arb']
    restart: always
    command: server
    env_file: .env.arb
    environment:
      NET_ID: 42161
      REDIS_URL: redis://redis/6
      nginx_proxy_read_timeout: 600
    depends_on: [redis]

  arb-healthWatcher:
    image: tornadocash/relayer:sidechain-beta
    profiles: ['arb']
    restart: always
    command: healthWatcher
    env_file: .env.arb
    environment:
      NET_ID: 42161
      REDIS_URL: redis://redis/6
    depends_on: [redis, arb-server]

  arb-worker1:
    image: tornadocash/relayer:sidechain-beta
    profiles: ['arb']
    restart: always
    command: worker
    env_file: .env.arb
    environment:
      NET_ID: 42161
      REDIS_URL: redis://redis/6
    depends_on: [redis, arb-server]

  # -------------------------------------------------- #

volumes:
  conf:
  vhost:
  html:
  certs:
  redis:
